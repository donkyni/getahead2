# Generated by Django 5.0.1 on 2024-08-15 11:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CodePays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pays', models.CharField(max_length=100, null=True)),
                ('code_pays', models.CharField(max_length=15, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Droits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_droit', models.CharField(max_length=255)),
                ('archive', models.BooleanField(default=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_groupe', models.CharField(help_text='Le nom du groupe permet de différencier les groupes, ex. Groupe 1', max_length=255, null=True)),
                ('manageur_du_groupe', models.CharField(help_text='Celui pour qui le groupe se cré et contiendra tous ses filleuls', max_length=255)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Niveau',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_niveau', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Poste',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_poste', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DroitsProfils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ecriture', models.BooleanField(default=False, null=True)),
                ('lecture', models.BooleanField(default=False, null=True)),
                ('modification', models.BooleanField(default=False, null=True)),
                ('suppression', models.BooleanField(default=False, null=True)),
                ('droit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.droits')),
            ],
        ),
        migrations.CreateModel(
            name='Palier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_du_palier', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False)),
                ('niveau', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.niveau')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Profils',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, null=True)),
                ('archive', models.BooleanField(default=False, null=True)),
                ('droits', models.ManyToManyField(through='affiliation.DroitsProfils', to='affiliation.droits')),
            ],
        ),
        migrations.AddField(
            model_name='droitsprofils',
            name='profil',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.profils'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nom_d_utilisateur', models.CharField(help_text="Le nom d'utilisateur servira à se connecter à la plateforme, également pour parrainer un membre. Ex. toto21", max_length=255, null=True, unique=True)),
                ('nom', models.CharField(max_length=255, null=True)),
                ('prenom', models.CharField(max_length=255, null=True)),
                ('telephone', models.BigIntegerField(blank=True, null=True, unique=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('annee_de_naissance', models.DateField(blank=True, null=True)),
                ('sexe', models.CharField(blank=True, choices=[('Homme', 'Homme'), ('Femme', 'Femme')], help_text='Le sexe servira pour les statistiques', max_length=120, null=True)),
                ('don_bam', models.BooleanField(default=False, null=True)),
                ('don_zou', models.BooleanField(default=False, null=True)),
                ('don_maya', models.BooleanField(default=False, null=True)),
                ('don_mand', models.BooleanField(default=False, null=True)),
                ('pied_gauche', models.BooleanField(default=False, null=True)),
                ('pied_droit', models.BooleanField(default=False, null=True)),
                ('nb_pers_amene', models.PositiveSmallIntegerField(default=0, null=True)),
                ('point', models.PositiveSmallIntegerField(default=0, null=True)),
                ('stock_point', models.PositiveSmallIntegerField(default=0, null=True)),
                ('point_fictive_inv', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('point_fictive_col', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('point_fictive_manag', models.PositiveSmallIntegerField(blank=True, default=0, null=True)),
                ('gam', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True)),
                ('unique_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('dix_milles', models.BooleanField(default=False, null=True)),
                ('point_a_affecter', models.PositiveSmallIntegerField(default=0, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('date_d_ajout', models.DateTimeField(auto_now_add=True, null=True, verbose_name="Date d'enrégistrement de l'utilisateur")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('nom_du_parent', models.ForeignKey(blank=True, help_text="Indiquez le parent qui l'adhère. S'il est le premier membre de son groupe, laissez vide", null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Parrain')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('pays_de_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.codepays')),
                ('groupe', models.ForeignKey(help_text="Le groupe permettra de voir l'ensemble de ses membres", null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.groupe', verbose_name="Nom de l'équipe")),
                ('palier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.palier')),
                ('poste', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.poste')),
                ('profil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='affiliation.profils')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateur',
                'ordering': ('id',),
            },
        ),
    ]
